{"version":3,"sources":["authConfig.js","ui.jsx","App.jsx","index.js"],"names":["msalConfig","auth","clientId","authority","redirectUri","postLogoutRedirectUri","navigateToLoginRequestUrl","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","NavigationBar","instance","useMsal","DropdownButton","variant","className","drop","title","Dropdown","Item","as","onClick","logoutPopup","mainWindowRedirectUri","logoutRedirect","Button","logout","loginPopup","loginRedirect","PageLayout","props","Navbar","bg","href","id","children","target","IdTokenClaims","idTokenClaims","aud","iss","oid","preferred_username","IdTokenContent","accounts","useState","setIdTokenClaims","name","MainContent","App","msalInstance","PublicClientApplication","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cbb2da0.chunk.js","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { LogLevel } from \"@azure/msal-browser\";\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n */\r\nexport const msalConfig = {\r\n    auth: {\r\n        clientId: \"0be07837-3db8-4772-b099-78f998bf511b\", // This is the ONLY mandatory field that you need to supply.\r\n        authority: \"https://login.microsoftonline.com/0213c7bf-21e1-4cb4-8529-e4eaff767ca4\", // Defaults to \"https://login.microsoftonline.com/common\"\r\n        redirectUri: \"/\", // Points to window.location.origin. You must register this URI on Azure Portal/App Registration.\r\n        postLogoutRedirectUri: \"/\", // Indicates the page to navigate after logout.\r\n        navigateToLoginRequestUrl: false, // If \"true\", will navigate back to the original request location before processing the auth code response.\r\n    },\r\n    cache: {\r\n        cacheLocation: \"sessionStorage\", // Configures cache location. \"sessionStorage\" is more secure, but \"localStorage\" gives you SSO between tabs.\r\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    },\r\n    system: {\r\n        loggerOptions: {\r\n            loggerCallback: (level, message, containsPii) => {\r\n                if (containsPii) {\r\n                    return;\r\n                }\r\n                switch (level) {\r\n                    case LogLevel.Error:\r\n                        console.error(message);\r\n                        return;\r\n                    case LogLevel.Info:\r\n                        console.info(message);\r\n                        return;\r\n                    case LogLevel.Verbose:\r\n                        console.debug(message);\r\n                        return;\r\n                    case LogLevel.Warning:\r\n                        console.warn(message);\r\n                        return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n    scopes: []\r\n};\r\n\r\n/**\r\n * An optional silentRequest object can be used to achieve silent SSO\r\n * between applications by providing a \"login_hint\" property.\r\n */\r\nexport const silentRequest = {\r\n    scopes: [\"openid\", \"profile\"],\r\n    loginHint: \"example@domain.net\"\r\n};","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\r\n\r\nimport { Navbar, Button, Dropdown, DropdownButton} from \"react-bootstrap\";\r\n\r\nimport { loginRequest } from \"./authConfig\";\r\n\r\nconst NavigationBar = () => {\r\n    /**\r\n     * useMsal is hook that returns the PublicClientApplication instance, \r\n     * an array of all accounts currently signed in and an inProgress value \r\n     * that tells you what msal is currently doing. For more, visit:\r\n     * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/hooks.md\r\n     */\r\n    const { instance } = useMsal();\r\n\r\n    return (\r\n        <>\r\n            <AuthenticatedTemplate>\r\n                <DropdownButton variant=\"warning\" className=\"ml-auto\" drop=\"left\" title=\"Sign Out\">\r\n                    <Dropdown.Item as=\"button\" onClick={() => instance.logoutPopup({postLogoutRedirectUri: \"/\", mainWindowRedirectUri: \"/\"})}>Sign out using Popup</Dropdown.Item>\r\n                    <Dropdown.Item as=\"button\" onClick={() => instance.logoutRedirect({postLogoutRedirectUri: \"/\"})}>Sign out using Redirect</Dropdown.Item>\r\n                </DropdownButton>\r\n                <Button variant=\"warning\" onClick={() => instance.logout()} className=\"ml-auto\">Sign Out</Button>\r\n            </AuthenticatedTemplate>\r\n            <UnauthenticatedTemplate>\r\n                <DropdownButton variant=\"secondary\" className=\"ml-auto\" drop=\"left\" title=\"Sign In\">\r\n                    <Dropdown.Item as=\"button\" onClick={() => instance.loginPopup(loginRequest)}>Sign in using Popup</Dropdown.Item>\r\n                    <Dropdown.Item as=\"button\" onClick={() => instance.loginRedirect(loginRequest)}>Sign in using Redirect</Dropdown.Item>\r\n                </DropdownButton>\r\n            </UnauthenticatedTemplate>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const PageLayout = (props) => {\r\n    return (\r\n        <>\r\n            <Navbar bg=\"primary\" variant=\"dark\">\r\n                <a className=\"navbar-brand\" href=\"/\">Microsoft identity platform</a>\r\n                <NavigationBar />\r\n            </Navbar>\r\n            <br />\r\n            <h5><center id=\"title\">Welcome to the Microsoft Authentication Library For React Tutorial</center></h5>\r\n            <br />\r\n            {props.children}\r\n            <br />\r\n            <AuthenticatedTemplate>\r\n                <footer>\r\n                    <center>How did we do?\r\n                        <a href=\"https://forms.office.com/Pages/ResponsePage.aspx?id=v4j5cvGGr0GRqy180BHbR73pcsbpbxNJuZCMKN0lURpUMlRHSkc5U1NLUkxFNEtVN0dEOTFNQkdTWiQlQCN0PWcu\" target=\"_blank\"> Share your experience!</a>\r\n                    </center>\r\n                </footer>\r\n            </AuthenticatedTemplate>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const IdTokenClaims = (props) => {\r\n    return (\r\n        <div id=\"token-div\">\r\n            <p><strong>Audience: </strong> {props.idTokenClaims.aud}</p>\r\n            <p><strong>Issuer: </strong> {props.idTokenClaims.iss}</p>\r\n            <p><strong>OID: </strong> {props.idTokenClaims.oid}</p>\r\n            <p><strong>UPN: </strong> {props.idTokenClaims.preferred_username}</p>\r\n        </div>\r\n    );\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport { MsalProvider, AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\r\n\r\nimport { PageLayout, IdTokenClaims } from \"./ui.jsx\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./styles/App.css\";\r\n\r\nconst IdTokenContent = () => {\r\n    /**\r\n     * useMsal is hook that returns the PublicClientApplication instance, \r\n     * an array of all accounts currently signed in and an inProgress value \r\n     * that tells you what msal is currently doing. For more, visit:\r\n     * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/hooks.md\r\n     */\r\n    const { accounts } = useMsal();\r\n    const [idTokenClaims, setIdTokenClaims] = useState(null);\r\n\r\n    function GetIdTokenClaims() {\r\n        setIdTokenClaims(accounts[0].idTokenClaims)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h5 className=\"card-title\">Welcome {accounts[0].name}</h5>\r\n            {idTokenClaims ?\r\n                <IdTokenClaims idTokenClaims={idTokenClaims} />\r\n                :\r\n                <Button variant=\"secondary\" onClick={GetIdTokenClaims}>View ID Token Claims</Button>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\n/**\r\n * Most applications will need to conditionally render certain components based on whether a user is signed in or not. \r\n * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will \r\n * only render their children if a user is authenticated or unauthenticated, respectively. For more, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\r\n */\r\nconst MainContent = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <AuthenticatedTemplate>\r\n                <IdTokenContent />\r\n            </AuthenticatedTemplate>\r\n\r\n            <UnauthenticatedTemplate>\r\n                <h5 className=\"card-title\">Please sign-in to see your profile information.</h5>\r\n            </UnauthenticatedTemplate>\r\n        </div>\r\n    );\r\n};\r\n\r\n/**\r\n * msal-react is built on the React context API and all parts of your app that require authentication must be \r\n * wrapped in the MsalProvider component. You will first need to initialize an instance of PublicClientApplication \r\n * then pass this to MsalProvider as a prop. All components underneath MsalProvider will have access to the \r\n * PublicClientApplication instance via context as well as all hooks and components provided by msal-react. For more, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\r\n */\r\nexport default function App({msalInstance}) {\r\n    return (\r\n        <MsalProvider instance={msalInstance}>\r\n            <PageLayout>\r\n                <MainContent />\r\n            </PageLayout>\r\n        </MsalProvider>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { PublicClientApplication } from \"@azure/msal-browser\";\r\n\r\nimport App from \"./App.jsx\";\r\nimport { msalConfig } from \"./authConfig\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles/index.css\";\r\n\r\n/**\r\n * MSAL should be instantiated outside of the component tree to prevent it from being re-instantiated on re-renders. \r\n * For more, visit: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\r\n */\r\nexport const msalInstance = new PublicClientApplication(msalConfig);\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App msalInstance={msalInstance}/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}